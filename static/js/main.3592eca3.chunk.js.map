{"version":3,"sources":["components/HeaderNav.js","stores/AppStore.js","components/HexContent.js","components/ReusableHex.js","components/MainContent.js","App.js","serviceWorker.js","index.js"],"names":["HeaderNav","className","href","AppStore","items","date","time","team1","team2","states","device","desktop","classid","HexContent","id","state","hexContent","position","size","toUpperCase","ReusableHex","clName","setActive","onClick","MainContent","useState","active","renderTeams","team","name","onWheel","e","stopPropagation","deltaY","Hexs","i","classId","item","key","push","renderHex","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.3592eca3.chunk.js","sourcesContent":["import React from 'react'\r\nimport './headernav.scss';\r\n\r\nexport const HeaderNav = () => {\r\n  return (\r\n    <div className=\"nav__container\">\r\n      <ul className=\"d_flex\">\r\n        <li className=\"nav__item\"><a className=\"hover_left\" href=\"/\">БИЛЕТЫ И АБОНЕМЕНТЫ</a></li>\r\n        <div className=\"d_flex flex_grow03\">\r\n          <li className=\"nav__item\"><a className=\"hover_left\" href=\"/\">Как купить?</a></li>\r\n          <li className=\"nav__item\"><a className=\"hover_left\" href=\"/\">Правила</a></li>\r\n          <li className=\"nav__item\"><a className=\"hover_left\" href=\"/\">Возврат билетов</a></li>\r\n        </div>\r\n        <div className=\"d_flex flex_grow01\">\r\n          <li className=\"nav__item\"><a className=\"hover_left\" href=\"/\">[ ] Войти</a></li>\r\n          <li className=\"nav__item\"><a href=\"/\">==</a></li>\r\n        </div>\r\n      </ul>\r\n    </div>\r\n  )\r\n}","export const AppStore = {\r\n  items: [\r\n    {date: '30 мая', time: '16:30', team1: 'Рубин', team2: 'Ак Барс'},\r\n    {date: '17 июня', time: '20:00', team1: 'Динамо', team2: 'Ак Барс'},\r\n    {date: '26 июня', time: '19:00', team1: 'Соперник №1', team2: 'Соперник №2'},\r\n    {date: '16 июля', time: '18:30', team1: 'Динамо', team2: 'Рубин'},\r\n    {date: '30 сентября', time: '19:30', team1: 'Ак Барс', team2: 'Рубин'},\r\n  ],\r\n  states: {\r\n    device: {\r\n      desktop: 'desktop'\r\n    },\r\n    classid: [\r\n      [3, 4, 5, 6, 6],\r\n      [2, 3, 4, 5, 6],\r\n      [1, 2, 3, 4, 5],\r\n      [0, 1, 2, 3, 4],\r\n      [0, 0, 1, 2, 3],\r\n    ]\r\n  }\r\n}","import React from 'react'\r\nimport { AppStore } from '../stores/AppStore'\r\nimport './hexcontent.scss';\r\n\r\nexport const HexContent = ({id, state}) => {\r\n  const hexContent = AppStore.items[id - 1]\r\n  let position = AppStore.states.classid[state - 1][id - 1]\r\n  // secondary text props\r\n  let size = position === 1 | position === 5 ? 'small' : 'medium'\r\n  \r\n  return (\r\n    <div className=\"mainhex__content\">\r\n      {state === id \r\n        ? <>\r\n          <p>Стадион</p>\r\n          <span className=\"strong\">{hexContent.date.toUpperCase()}</span>\r\n          <span className=\"mainhex__time\">{hexContent.time}</span>\r\n          <button className=\"mainhex__button\">Купить билет</button>\r\n        </>\r\n        : position === 0 || position === 6 // check not faded\r\n          ? null \r\n          : <span className={\"secondary__content \" + size}>{hexContent.date}</span>\r\n      }\r\n    </div>\r\n  )\r\n}","import React from 'react'\r\nimport { HexContent } from './HexContent';\r\n\r\nexport const ReusableHex = ({id, clName, state, setActive}) => {\r\n\r\n  return (\r\n    <div className={'hex__initial hex__' + clName} onClick={() => setActive(id)}>\r\n      <HexContent id={id} state={state}/>\r\n    </div>\r\n  )\r\n}","import React, { useState } from 'react'\r\nimport { AppStore } from '../stores/AppStore'\r\nimport { ReusableHex } from './ReusableHex'\r\nimport './maincontent.scss'\r\nimport './hexcontent.scss';\r\nimport './teaminfo.scss'\r\n\r\nexport const MainContent = () => {\r\n\r\n  let [active, setActive] = useState(3)\r\n\r\n  // render elements \r\n  const renderHex = (active, device) => {\r\n    let Hexs = []\r\n    for (let i = 0; i < 5; i++) {\r\n      let classId = AppStore.states.classid[active - 1][i]\r\n      let item = <ReusableHex\r\n        key={i} \r\n        id={i + 1} \r\n        clName={device+classId} \r\n        state={active} \r\n        setActive={setActive}\r\n      />\r\n      Hexs.push(item)\r\n    }\r\n    return Hexs\r\n  }\r\n\r\n  // render team information\r\n  const renderTeams = (active, id) => {\r\n    let team = id === 1 ? 'team1' : 'team2'\r\n    let name = AppStore.items[active - 1][team]\r\n    let clName = \"strong team\" + id\r\n    return (<span className={clName}>{name}</span>)\r\n  }\r\n\r\n  // onWheel event \r\n  const handleWheel = (e) => {\r\n    e.stopPropagation()\r\n    switch (active) {\r\n      case 1:\r\n        e.deltaY < 0 ? setActive(active) : setActive(active++)\r\n        break;\r\n      case 5:\r\n        e.deltaY < 0 ? setActive(active--) : setActive(active)\r\n        break;      \r\n      default:\r\n        e.deltaY < 0 ? setActive(active--) : setActive(active++)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div onWheel={handleWheel}>\r\n      {/* left team info */}\r\n      <div className=\"cut-corner cut-corner__left\">\r\n        {renderTeams(active, 1)}\r\n      </div>\r\n      <div className=\"hex-container\">\r\n        {renderHex(active, 'desktop')}\r\n      </div>\r\n      {/* right team info */}\r\n      <div className=\"cut-corner cut-corner__right\">\r\n        {renderTeams(active, 2)}\r\n      </div>\r\n    </div>\r\n  )\r\n}","import React from 'react';\nimport { HeaderNav } from './components/HeaderNav';\nimport { MainContent } from './components/MainContent';\n\nfunction App() {\n  return (\n    <div>\n      <HeaderNav />\n      <MainContent />\n    </div>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}